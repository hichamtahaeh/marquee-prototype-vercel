'use client';
import 'styles/main.css';
import globalReducer from 'lib/reducers/globalReducer';
import { GlobalStateProvider } from 'lib/state';
import axios from 'axios';

/**
 * Handle different states (redirects) when making axios requests.
 */
axios.interceptors.response.use(
    (response) => response.data,
    (err) => {
        console.log('err response', err.response.data);
        switch (err.response.status) {
            // Internal Server Error.
            case 500:
                console.log('Internal Server Error. redirecting to 500 page.');
                break;

            // Session expired.
            case 440:
                console.log(err.request, 'Session expired. Logging out and redirecting to 440 page.');
                break;

            // Page Not Found.
            case 404:
                console.log('Page Not Found. Redirecting to 404 page.');
                break;

            // Forbidden.
            case 403:
                console.log('Forbidden. Redirecting to 403 page.');
                break;

            // Unauthorized.
            case 401:
                console.log('Unauthorized.');
                break;

            // Unhandled.
            default:
                console.log(`Unhandled server response ${err.response.status}`);
        }

        return { pass: false, data: err.response.data };
    }
);

// export const metadata = {
//     title: 'Marquee Prototype App',
//     description: 'Generated by create next app',
// };

const initialGlobalState = {
    user: {},
    dashboard: {
        activePanel: 'dashboard',
    },
};

export default function RootLayout({ children }) {
    return (
        <html lang='en'>
            <head>
                <title>Marquee Prototype App</title>
                <meta name='viewport' content='initial-scale=1.0, width=device-width' />
            </head>
            <body>
                <GlobalStateProvider initialState={initialGlobalState} reducer={globalReducer}>
                    {children}
                </GlobalStateProvider>
            </body>
        </html>
    );
}
